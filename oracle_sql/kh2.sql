--DML
--회원(이름,나이,주소,성별,아이디,패스워드,가입일)
CREATE TABLE MEMBER_TBL(
     MEMBER_ID   VARCHAR2(20),         --아이디
     MEMBER_PW   VARCHAR2(30),         --비밀번호
     MEMBER_NAME   VARCHAR2(20),       --이름
     MEMBER_AGE    NUMBER,             --나이
     ADDRESS     VARCHAR(500),         --주소
     GENDER     CHAR(6),               --성별
     ENROLL_DATE  DATE                 --가입일
 );    
SELECT * FROM MEMBER_TBL;
 --INSERT : 테이블에 데이터를 삽입하는 구문
 -- ->ROW수가 증가한다.
 -- 1) INSERT INTO 테이블이름 (컬럼이름1,컬럼이름2...) VALUES(값1, 값2 .....);
INSERT INTO MEMBER_TBL(MEMBER_ID, MEMBER_PW, MEMBER_NAME, 
                        MEMBER_AGE, ADDRESS,GENDER,ENROLL_DATE)
             VALUES('USER01', '1234', '유저1', 20, '서울시 영등포구 당산동', '남자',sysdate);           
             
INSERT INTO MEMBER_TBL(MEMBER_NAME, MEMBER_AGE, ADDRESS, GENDER,
                        MEMBER_ID, MEMBER_PW,ENROLL_DATE)
                 VALUES('유저2',30,'서울시 영등포구','여자','user02','11111', sysdate);

INSERT INTO MEMBER_TBL(MEMBER_ID, MEMBER_PW, MEMBER_NAME)
                 VALUES('user03','33333','유저3');

INSERT INTO MEMBER_TBL(MEMBER_NAME, MEMBER_AGE, GENDER)
                VALUES('유저4',22,'남자');
--2) INSERT INTO 테이블명 VALUES(값1,값2,값3....);
--모든 컬럼의 값을 테이블의 컬럼순서대로 모두 입력해야함
INSERT INTO MEMBER_TBL VALUES('user05','5555','유저5',40,'서울시','여자',SYSDATE);
INSERT INTO MEMBER_TBL VALUES('user06','6666','유저6',NULL,NULL,NULL,NULL);

UPDATE MEMBER_TBL SET MEMBER_AGE=50 WHERE MEMBER_ID='user03';
SELECT * FROM MEMBER_TBL;      
------------------------------------------------------------------
CREATE TABLE TEST_USER_TBL(
     USER_NO    NUMBER,             --회원번호
     JOIN_DATE  DATE,               --가입일
     USER_ID    VARCHAR2(30),       --아이디
     PASSWORD   VARCHAR2(20),       --비밀번호
     NICKNAME   VARCHAR2(20),       --별명
     PHONE      CHAR(13),           --전화번호(010-0000-0000 형식)
     AGE        NUMBER              --나이
 );    
 SELECT * FROM TEST_USER_TBL;
 
INSERT INTO TEST_USER_TBL(USER_NO,JOIN_DATE,USER_ID,PASSWORD,NICKNAME,PHONE, AGE)
             VALUES(01, sysdate, '유저1', '1111', '일일', '010-1234-1234' ,20 );
INSERT INTO TEST_USER_TBL(USER_NO,JOIN_DATE,USER_ID,PASSWORD,NICKNAME,PHONE, AGE)
             VALUES(02, sysdate, '유저2', '2222', '이이', '010-1234-4567' ,30 );
INSERT INTO TEST_USER_TBL(USER_NO,JOIN_DATE,USER_ID,PASSWORD,NICKNAME,PHONE, AGE)
             VALUES(03, sysdate, '유저3', '3333', '삼삼', '010-1234-4321' ,40 );
INSERT INTO TEST_USER_TBL(USER_NO,JOIN_DATE,USER_ID,PASSWORD,NICKNAME,PHONE, AGE)
             VALUES(04, sysdate, '유저4', '4444', '사사', '010-1234-5678' ,50 );
INSERT INTO TEST_USER_TBL(USER_NO,JOIN_DATE,USER_ID,PASSWORD,NICKNAME,PHONE, AGE)
             VALUES(05, sysdate, '유저5', '5555', '오오', '010-1234-6789' ,60 ); 
             
INSERT INTO TEST_USER_TBL values(06, sysdate, '유저6', '6666', '육육', '010-1234-9876' ,70 );
INSERT INTO TEST_USER_TBL values(07, sysdate, '유저7', '7777', '칠칠', '010-2345-9876' ,80 ); 
INSERT INTO TEST_USER_TBL values(08, sysdate, '유저8', '8888', '팔팔', '010-3456-9876' ,90 ); 
INSERT INTO TEST_USER_TBL values(09, sysdate, '유저9', '9999', '구구', '010-4567-9876' ,100 ); 
INSERT INTO TEST_USER_TBL values(10, sysdate, '유저10', '0000', '텐텐', '010-5678-9876' ,110 ); 

UPDATE TEST_USER_TBL
SET NICKNAME='칠순잔치',PHONE='010-7777-7777'
WHERE USER_NO=07;

DELETE FROM TEST_USER_TBL WHERE USER_ID='유저6';
-------------------------------------------------------
--수정
-- UPDATE 테이블이름 SET 수정할컬럼이름 = 수정값, 수정할컬럼이름=수정값 WHERE 조건
UPDATE MEMBER_TBL SET MEMBER_AGE=50 WHERE MEMBER_ID='user03';
UPDATE MEMBER_TBL
SET ADDRESS='경기도', GENDER='남자',ENROLL_DATE=SYSDATE-1
WHERE MEMBER_ID='user03';--행35

UPDATE MEMBER_TBL
SET MEMBER_ID='user04', MEMBER_PW='4444', ADDRESS='부산시',ENROLL_DATE=SYSDATE-3
WHERE MEMBER_NAME='유저4';
SELECT * FROM MEMBER_TBL; 
------------------------------------------
--삭제
--DELETE : ROW수 감소
--DELETE FROM 테이블명 WHERE 조건
DELETE FROM MEMBER_TBL WHERE MEMBER_ID='user06';

COMMIT;

--------------------------------------------------------------------------
DROP TABLE USER_TBL;
CREATE TABLE USER_TBL(
    USER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20) UNIQUE NOT NULL,
    USER_PW VARCHAR(30)  NOT NULL
);
INSERT INTO USER_TBL VALUES(1,'user01','1234');
INSERT INTO USER_TBL VALUES(2,'user02','2222');
INSERT INTO USER_TBL VALUES(3,'user03','3333');
COMMIT;
INSERT INTO USER_TBL VALUES(4,'user04','4444');
INSERT INTO USER_TBL VALUES(5,'user05','5555');
INSERT INTO USER_TBL VALUES(6,'user06','4444');
INSERT INTO USER_TBL VALUES(7,'user07','4444');
ROLLBACK;
UPDATE USER_TBL SET USER_PW='5555' WHERE USER_NO=5;
SELECT * FROM USER_TBL;
SAVEPOINT SP1;
ROLLBACK TO SP1;

--VIEW 생성
CREATE OR REPLACE VIEW EMP_VIEW--얕은복사개념
AS
SELECT EMP_ID, EMP_NAME, PHONE, SALARY FROM EMPLOYEE;

CREATE TABLE EMP_COPY5--깊은복사개념
AS
SELECT EMP_ID, EMP_NAME, PHONE, SALARY FROM EMPLOYEE;

SELECT * FROM EMPLOYEE;
SELECT * FROM EMP_VIEW;
SELECT * FROM EMP_COPY5;
UPDATE EMP_COPY5 SET SALARY = 7000000 WHERE EMP_ID=200;
UPDATE EMP_VIEW SET SALARY = 9000000 WHERE EMP_ID=200;

--시퀀스 : 자동번호생성기
/*
CREATE SEQUENCE 시퀀스이름
CREATE SEQUENCE 시퀀스이름; --1부터시작해서 1씩 증가하는 시퀀스 생성

CREATE SEQUENCE 시퀀스이름
START WITH 숫자      --시퀀스 시작번호 설정
INCREMENT BY 숫자    --다음숫자 발생시 증가폭
MAXVALUE 숫자        --시퀀스가 발생시키는 숫자의 최대값
[CYCLE | NOCYCLE]   --CYCLE : 최대값도달시 이후에 다시 START부터 시작/NOCYCLE:에러발생
[CACHE | NOCACHE]   -- 시퀀스값을 메모리에서 처리할지 결정
*/
CREATE SEQUENCE USER_NO_SEQ
START WITH 10
INCREMENT BY 10
MAXVALUE 100
NOCYCLE
NOCACHE;
DROP SEQUENCE USER_NO_SEQ;

SELECT USER_NO_SEQ.NEXTVAL FROM DUAL;
SELECT USER_NO_SEQ.CURRVAL FROM DUAL;
INSERT INTO USER_TBL VALUES(USER_NO_SEQ.NEXTVAL,'user10','4444');
SELECT * FROM USER_TBL;
--1)NEXTVAL하기전에 CURRVAL실행 하면안됨


--시퀀스 생성
--시퀀스 이름: SEQ_TEST_NO
--시작번호 : 1, 증가값 :5, 최대값 100, NOCYCLE, NOCACHA
CREATE SEQUENCE SEQ_TEST_NO
START WITH 1
INCREMENT BY 5
MAXVALUE 100
NOCYCLE
NOCACHE;

ALTER SEQUENCE SEQ_TEST_NO--수정문구 ALTER사용
INCREMENT BY 10
MAXVALUE 100
NOCYCLE
NOCACHE;

SELECT SEQ_TEST_NO.NEXTVAL FROM DUAL;
SELECT SEQ_TEST_NO.CURRVAL FROM DUAL;
INSERT INTO USER_TBL VALUES(SEQ_TEST_NO.NEXTVAL,'user15','5555');
DROP SEQUENCE SEQ_TEST_NO;
SELECT * FROM USER_TBL;
-------------------------------------------
CREATE TABLE KH_MEMBER(
   MEMBER_ID   NUMBER,
   MEMBER_NAME  VARCHAR2(20),
   MEMBER_AGE   NUMBER,
   MEMBER_JOIN_COM  NUMBER
);
--INSERT INTO KH_MEMBER VALUES(1,'user01',20,1);
--INSERT INTO KH_MEMBER VALUES(2,'user02',21,2);
--INSERT INTO KH_MEMBER VALUES(3,'user03',22,3);
--INSERT INTO KH_MEMBER VALUES(4,'user04',23,4);

CREATE SEQUENCE MEMBER_ID
START WITH 500
INCREMENT BY 10
MAXVALUE 10000
NOCYCLE
NOCACHE;
CREATE SEQUENCE MEMBER_JOIN_COM
START WITH 1
INCREMENT BY 1
MAXVALUE 10000
NOCYCLE
NOCACHE;

INSERT INTO KH_MEMBER VALUES(MEMBER_ID.NEXTVAL,'고길동',24,MEMBER_JOIN_COM.NEXTVAL);
SELECT * FROM KH_MEMBER;

------------------
--INDEX
CREATE INDEX EMP_IDX
ON 
EMPLOYEE(EMP_NAME, EMP_NO, HIRE_DATE);
DROP INDEX EMP_IDX;
SELECT EMP_NAME, EMP_NO, HIRE_DATE FROM EMPLOYEE;


--SYNONYM
--비공개동의어// 공개동의어 설명은 admin1에 있음
SELECT * FROM EMPLOYEE;
SELECT * FROM EMP;
SELECT * FROM DEPT;
CREATE SYNONYM EMP FOR EMPLOYEE;
DROP SYNONYM EMP;


