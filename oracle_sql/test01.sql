--테이블 생성방법
--CREATE TABLE 테이블이름 (컬럼이름 자료형 (크기), 컬럼이름 자료형 (크기)....)
/*
CREATE TABLE 테이블이름(
    컬럼이름    자료형(크기),
    컬럼이름    자료형(크기),
    컬럼이름    자료형(크기)
)
*/
CREATE TABLE MEMBER(
   MEMBER_ID   VARCHAR2(20),--고정/가변
   MEMBER_PW   VARCHAR2(20),
   MEMBER_NAME VARCHAR2(21)
);
COMMENT ON COLUMN MEMBER.MEMBER_ID IS '회원아이디';
COMMENT ON COLUMN MEMBER.MEMBER_PW IS '회원비밀번호';
COMMENT ON COLUMN MEMBER.MEMBER_NAME IS '회원이름';
INSERT INTO MEMBER VALUES('user01','1234','유저1');
SELECT * FROM MEMBER;


CREATE TABLE USER_NOCONS(
   USER_NO    NUMBER,
   USER_ID    VARCHAR2(20),
   USER_PW    VARCHAR2(30),
   USER_NAME  VARCHAR2(30),
   GENDER     CHAR(6),
   PHONE      CHAR(11)
);
INSERT INTO USER_NOCONS VALUES(1,'user01','1234','유저1','여자','01012341234');
INSERT INTO USER_NOCONS VALUES(2,'user02','','','남자','01012345678');
SELECT * FROM USER_NOCONS;

--not null
CREATE TABLE USER_NOTNULL(
   USER_NO    NUMBER,
   USER_ID    VARCHAR2(20) NOT NULL,
   USER_PW    VARCHAR2(30) NOT NULL,
   USER_NAME  VARCHAR2(30) NOT NULL,
   GENDER     CHAR(6),
   PHONE      CHAR(11)
);
INSERT INTO USER_NOTNULL VALUES(1,'user01','1234','유저1','남자','01012341234');
INSERT INTO USER_NOTNULL VALUES(2,'user02','1234','유저2','여자','01012345678');
SELECT * FROM USER_NOTNULL;

--UNIQUE : 해당 컬럼값의 중복을 제한
SELECT * FROM USER_NOCONS;
INSERT INTO USER_NOCONS VALUES(3,'user01','1234','중복','남자','01012341234');
DROP TABLE USER_UNIQUE;
CREATE TABLE USER_UNIQUE(
   USER_NO    NUMBER UNIQUE , --UNIQUE 컬럼레벨설정
   USER_ID    VARCHAR2(20),
   USER_PW    VARCHAR2(30),
   USER_NAME  VARCHAR2(30),
   GENDER     CHAR(6),
   PHONE      CHAR(11),
   UNIQUE(USER_ID)          --UNIQUE테이블 레벨 설정
);
INSERT INTO USER_UNIQUE VALUES(1,'user01','1234','유저1','남자','01012341234');
INSERT INTO USER_UNIQUE VALUES(2,'user02','2222','유저2','여자','01022221234');
INSERT INTO USER_UNIQUE VALUES(3,NULL,'3333','유저3','여자','01033331234');
INSERT INTO USER_UNIQUE VALUES(4,NULL,'4444','유저4','남자','01044441234');
SELECT * FROM USER_UNIQUE;

DROP TABLE USER_UNIQUE2;
CREATE TABLE USER_UNIQUE2(
   USER_NO    NUMBER UNIQUE , --UNIQUE 컬럼레벨설정
   USER_ID    VARCHAR2(20),
   USER_PW    VARCHAR2(30),
   USER_NAME  VARCHAR2(30),
   GENDER     CHAR(6),
   PHONE      CHAR(11),
   UNIQUE(USER_NO, USER_ID)          --동시에 유니크가 걸림
);
INSERT INTO USER_UNIQUE2 VALUES(1,'user01','1234','유저1','남자','01012341234');
INSERT INTO USER_UNIQUE2 VALUES(1,'user02','1234','유저2','남자','01022221234');
INSERT INTO USER_UNIQUE2 VALUES(2,'user01','3333','유저3','남자','01033331234');
SELECT * FROM USER_UNIQUE2;

------
--제약조건
--PRIMARY KEY
CREATE TABLE USER_PK1(
   USER_NO    NUMBER PRIMARY KEY,  --컬럼레벨에서 PK설정
   USER_ID    VARCHAR2(20),
   USER_PW    VARCHAR2(30),
   USER_NAME  VARCHAR2(30),
   GENDER     CHAR(6),
   PHONE      CHAR(11)
);
INSERT INTO USER_PK1 VALUES(1, 'user01', '1234','유저1','남자','01011111111');
INSERT INTO USER_PK1 VALUES(NULL, 'user02', '1234','유저2','여자','01022221111');

CREATE TABLE USER_PK2(
   USER_NO    NUMBER,  --컬럼레벨에서 PK설정
   USER_ID    VARCHAR2(20),
   USER_PW    VARCHAR2(30),
   USER_NAME  VARCHAR2(30),
   GENDER     CHAR(6),
   PHONE      CHAR(11),
   PRIMARY KEY(USER_NO)    --테이블레벨 설정
);

CREATE TABLE USER_PK3(
   USER_NO    NUMBER,  --컬럼레벨에서 PK설정
   USER_ID    VARCHAR2(20),
   USER_PW    VARCHAR2(30),
   USER_NAME  VARCHAR2(30),
   GENDER     CHAR(6),
   PHONE      CHAR(11),
   PRIMARY KEY(USER_NO, USER_ID)    --테이블레벨 설정
);

--제약조건
--FOREIGN KEY
--참조무결성을 유지하기 위한 제약조건
CREATE TABLE SHOP_MEMBER(
    USER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20)    UNIQUE NOT NULL,
    USER_PW VARCHAR2(30)    NOT NULL,
    USER_NAME VARCHAR2(20)
);

INSERT INTO SHOP_MEMBER 
VALUES(1, 'user01', '1111','유저1');
INSERT INTO SHOP_MEMBER 
VALUES(2, 'user02', '2222','유저2');
INSERT INTO SHOP_MEMBER 
VALUES(3, 'user03', '3333','유저3');
SELECT * FROM SHOP_MEMBER;

CREATE TABLE SHOP_BUY1(
    BUY_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20) REFERENCES SHOP_MEMBER(USER_ID),
    PRODUCT_NAME   VARCHAR2(300),
    BUY_DATE    DATE
);
INSERT INTO SHOP_BUY1
VALUES(1, 'user01','맥북프로',sysdate-1);
INSERT INTO SHOP_BUY1
VALUES(2, 'user02','키보드',sysdate);
INSERT INTO SHOP_BUY1
VALUES(3, 'user04','맥북프로',sysdate);
SELECT * FROM SHOP_BUY1;
UPDATE SHOP_BUY1 SET USER_ID='user04' WHERE BUY_NO=2;
-- 외래키 테이블레벨 설정
CREATE TABLE SHOP_BUY2(
    BUY_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20),
    PRODUCT_NAME   VARCHAR2(300),
    BUY_DATE    DATE,
    FOREIGN KEY(USER_ID) REFERENCES SHOP_MEMBER(USER_ID)
);
CREATE TABLE SHOP_BUY3(
    BUY_NO NUMBER PRIMARY KEY,
    USER_NO NUMBER(20) REFERENCES SHOP_MEMBER,
    PRODUCT_NAME   VARCHAR2(300),
    BUY_DATE    DATE
);
SELECT * FROM SHOP_MEMBER;
SELECT * FROM SHOP_BUY1;

DELETE FROM SHOP_MEMBER WHERE USER_ID='user03';
DELETE FROM SHOP_MEMBER WHERE USER_ID='user02';


DROP TABLE USER_UNIQUE2;
CREATE TABLE SHOP_MEMBER1(
    USER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20)    UNIQUE NOT NULL,
    USER_PW VARCHAR2(30)    NOT NULL,
    USER_NAME VARCHAR2(20)
);
INSERT INTO SHOP_MEMBER1 
VALUES(1, 'user11', '1111','유저1');
INSERT INTO SHOP_MEMBER1 
VALUES(2, 'user22', '2222','유저2');

CREATE TABLE SHOP_MEMBER2(
    USER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20)    UNIQUE NOT NULL,
    USER_PW VARCHAR2(30)    NOT NULL,
    USER_NAME VARCHAR2(20)
);
INSERT INTO SHOP_MEMBER2 
VALUES(1, 'user33', '1111','유저3');
INSERT INTO SHOP_MEMBER2 
VALUES(2, 'user44', '2222','유저4');

SELECT * FROM SHOP_MEMBER1
UNION ALL
SELECT * FROM SHOP_MEMBER2;

CREATE TABLE SHOP_BUY_TEST1(
    BUY_NO  NUMBER PRIMARY KEY,
    USER_ID  VARCHAR2(20) REFERENCES SHOP_MEMBER1(USER_ID) ON DELETE SET NULL,
    PRODUCT_NAME  VARCHAR2(200),
    BUY_DATE DATE
);
INSERT INTO SHOP_BUY_TEST1
VALUES(1, 'user11', '핸드폰',sysdate);
INSERT INTO SHOP_BUY_TEST1
VALUES(2, 'user22', '노트북',sysdate);

SELECT * FROM SHOP_BUY_TEST1;
SELECT * FROM SHOP_MEMBER1;
DELETE FROM SHOP_BUY_TEST1 WHERE BUY_NO=2;
DELETE FROM SHOP_MEMBER1 WHERE USER_ID='user11';


CREATE TABLE SHOP_BUY_TEST2(
    BUY_NO  NUMBER PRIMARY KEY,
    USER_ID  VARCHAR2(20) REFERENCES SHOP_MEMBER2(USER_ID) ON DELETE CASCADE,
    PRODUCT_NAME  VARCHAR2(200),
    BUY_DATE DATE
);
SELECT * FROM SHOP_MEMBER2;
INSERT INTO SHOP_BUY_TEST2
VALUES(1, 'user33', '커피', sysdate);
INSERT INTO SHOP_BUY_TEST2
VALUES(2, 'user44', '마우스', sysdate);
INSERT INTO SHOP_BUY_TEST2
VALUES(3, 'user44', '키보드', sysdate);

SELECT * FROM SHOP_MEMBER2;
SELECT * FROM SHOP_BUY_TEST2;
DELETE FROM SHOP_MEMBER2 WHERE USER_ID='user44';

--CHECK : 해당컬럼에 설정한 값만 넣을 수 있게하는 제약조건
CREATE TABLE USER_CHECK(
   USER_NO    NUMBER,
   USER_ID    VARCHAR2(20),
   USER_PW    VARCHAR2(30),
   USER_NAME  VARCHAR2(30),
   GENDER     CHAR(6) CHECK(GENDER IN ('남자', '여자')),
   PHONE      CHAR(11)
);
INSERT INTO USER_CHECK
VALUES(1, 'user01', '1234','유저1','남자','01011111111');
INSERT INTO USER_CHECK
VALUES(2, 'user02', '1234','유저2','여자','01011111112');
INSERT INTO USER_CHECK
VALUES(3, 'user03', '1234','유저3',NULL,'01011111113');
SELECT * FROM USER_CHECK;