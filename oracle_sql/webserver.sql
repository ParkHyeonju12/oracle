--회원테이블
CREATE TABLE MEMBER_TBL (
    MEMBER_NO NUMBER        PRIMARY KEY, --회원 고유번호
    MEMBER_ID VARCHAR(20)   UNIQUE NOT NULL,
    MEMBER_PW VARCHAR(20)   NOT NULL,
    MEMBER_NAME VARCHAR(20) NOT NULL,
    MEMBER_PHONE CHAR(13),
    MEMBER_ADDR VARCHAR(100),
    MEMBER_LEVEL    NUMBER,  --회원등급(1:관리자, 2:정회원, 3:준회원)
    ENROLL_DATE  CHAR(10)   --YYYY-MM-DD
);
CREATE SEQUENCE MEMBER_SEQ; --회원 고유번호 발급을 위한 시퀀스

select * from member_tbl;

UPDATE MEMBER_TBL SET MEMBER_LEVEL = 1 WHERE MEMBER_NO =1;
UPDATE MEMBER_TBL SET MEMBER_LEVEL = 2 WHERE MEMBER_NO = 3;
UPDATE MEMBER_TBL SET MEMBER_LEVEL = 2 WHERE MEMBER_NO = 3;
UPDATE MEMBER_TBL SET MEMBER_LEVEL = 2 WHERE MEMBER_NO = 4;
UPDATE MEMBER_TBL SET MEMBER_LEVEL = 2 WHERE MEMBER_NO = 17;
UPDATE MEMBER_TBL SET MEMBER_LEVEL = 2 WHERE MEMBER_NO = 12;
UPDATE MEMBER_TBL SET MEMBER_LEVEL = 2 WHERE MEMBER_NO = 21;
COMMIT;

INSERT INTO member_tbl  
VALUES (MEMBER_SEQ.NEXTVAL,"USER055","55555","현주","010-5599-9999","부천","3",SYSDATE);


CREATE TABLE NOTICE(
    NOTICE_NO       NUMBER PRIMARY KEY,
    NOTICE_TITLE    VARCHAR2(300) NOT NULL,
    NOTICE_WRITER   VARCHAR2(20) REFERENCES MEMBER_TBL(MEMBER_ID) ON DELETE SET NULL,
    NOTICE_CONTENT  VARCHAR2(4000) NOT NULL,
    READ_COUNT      NUMBER,
    REG_DATE        CHAR(10),
    FILENAME        VARCHAR2(100),--원본파일이름
    FILEPATH        VARCHAR2(100) --실제 서버에 올라가는 이름(사용자가 업로드한 이름과 다를 수도)
);

CREATE SEQUENCE NOTICE_SEQ;

SELECT * FROM notice;

INSERT INTO NOTICE VALUES (NOTICE_SEQ.NEXTVAL,'이제곧'||NOTICE_SEQ.CURRVAL,'ka7417','끝나여'||NOTICE_SEQ.CURRVAL,0,TO_CHAR(SYSDATE,'YYYY-MM-DD'),NULL,NULL);

commit;

SELECT * FROM NOTICE ORDER BY NOTICE_NO DESC;

select rownum as rnum,n.*from (SELECT * FROM NOTICE ORDER BY NOTICE_NO DESC)n;

select * from (select rownum as rnum,n.*from (SELECT * FROM NOTICE ORDER BY NOTICE_NO DESC)n)
where rnum between 1 and 10;



select rownum as rnum,n.*from (SELECT * FROM NOTICE ORDER BY NOTICE_NO DESC)n;

select * from (select rownum as rnum,n.*from (SELECT * FROM NOTICE ORDER BY NOTICE_NO DESC)n) where rnum between 1 and 10;

select count(*)as cnt from notice;


CREATE TABLE NOTICE_COMMENT(
    NC_NO       NUMBER           PRIMARY KEY,
    NC_WRITER   VARCHAR(20)      REFERENCES MEMBER_TBL(MEMBER_ID) ON DELETE CASCADE,
    NC_CONTENT  VARCHAR(1000)    NOT NULL,
    NC_DATE     CHAR(10),
    NOTICE_REF  NUMBER           REFERENCES NOTICE ON DELETE CASCADE,
    NC_REF      NUMBER           REFERENCES NOTICE_COMMENT ON DELETE CASCADE
);

CREATE SEQUENCE NC_SEQ;